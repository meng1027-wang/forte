import numpy as np
import sys
sys.path.append("../../")
from trans_soc_ao_ints import *
from based_ci_soc_hamiltonian_test_forte import *
from based_ci_spinfree_hamiltonian import *

# part1: 输入内容，每次计算待修改
mol = 'oh'
geom = '''
O
H 1 0.96966
      '''
basis = {'H':'''unc
H    S
   188.61445                 .00096385             -.0115701              -.0212892              -.0013119               .00242240              .01478099
    28.276596                .00749196             -.0837154              -.1095596              -.0103451               .02033817              .09403187
     6.4248300               .03759541             -.4451663             -1.481826               -.0504953               .08963935              .53618016
     1.8150410               .14339498            -1.146271               3.0272963              -.2073855               .44229071             -.6089639
      .59106300              .34863630             2.5031871             -3.763086               -.4350885               .57571439            -1.114889
      .21214900              .43829736            -1.582849               3.6574131              -.0247297              -.9802890              3.4820812
      .07989100              .16510661              .03096569            -2.501237                .32252599             -.6721538             -3.762539
      .02796200              .02102287              .30862864              .89405394              .70727538             1.1417685              1.6766932
H    P
     2.3050000               .11279019            -1.442742                .75995011             -.2108688
      .80675000              .41850753             2.3489914               .16461590             -.5943796
      .28236200              .47000773            -1.991152              -1.371014                .08968888
      .09882700              .18262603              .90505601             1.0593155               .86116340
H    D
     1.8190000               .27051341             -.7938035              1.3082770
      .72760000              .55101250             -.0914252             -2.021059
      .29104000              .33108664              .86200334             1.2498888
H    F
     0.970109               1.0
''',
'O':'''unc
O    S
105374.95                   0.00012386            -0.00074282            -0.00002815             0.00028260             0.00002616            -0.00005058             0.00005196            -0.00010763
 15679.240                  0.00051201            -0.00234233            -0.00011630             0.00129918             0.00010748            -0.00020024             0.00019612            -0.00052397
  3534.5447                 0.00215291            -0.01591640            -0.00049092             0.00432159             0.00045972            -0.00091952             0.00099303            -0.00154004
   987.36516                0.00852844            -0.02654546            -0.00194616             0.02387042             0.00179555            -0.00320240             0.00297658            -0.00999424
   315.97875                0.03018049            -0.25914159            -0.00700530             0.05255072             0.00667574            -0.01359974             0.01564071            -0.01742170
   111.65428                0.09099702            -0.10283024            -0.02167814             0.29061324             0.02053445            -0.03392296             0.03231923            -0.12514010
    42.699451               0.21779364            -2.13479838            -0.05641213             0.20167956             0.05828602            -0.11685462             0.16012253            -0.05984838
    17.395596               0.36862457             6.05081927            -0.11270530             1.51837289             0.12129691            -0.14040275             0.15386867            -0.78330815
     7.4383090              0.33667073            -7.46850493            -0.15891197            -5.38029979             0.22641475            -0.47546666             0.93886300             0.91900687
     3.2228620              0.09657630             5.73131339            -0.03355083             6.65712125            -0.04238700             0.83350096            -3.16442722             1.50335971
     1.2538770              0.00214452            -3.43918753             0.35319028            -5.49075525            -1.01045538             1.30186138             2.94545392            -4.17166405
      .49515500             0.00119435             1.98094698             0.55341993             3.95898574            -0.15386868            -2.48175844            -0.46724256             5.18802378
      .19166500             0.00053902            -0.92207192             0.23018391            -2.26298568             0.99345320             0.81134659            -1.59503813            -4.10387047
      .06708300             0.00021034             0.26077136             0.01127267             0.79637701             0.18587254             0.58210417             1.34403482             1.75198360
O    P
   200.00000                0.02945525             0.00091730            -0.00087213            -0.00917182            -0.00195602             0.00129603             0.00319452
    46.533367              -0.02705478             0.00737714            -0.00706424            -0.00978879            -0.02399585             0.01151279             0.03858703
    14.621809               1.72712535             0.03483515            -0.03330489            -0.53210575            -0.09118427             0.05159120             0.17878547
     5.3130640             -3.00927511             0.11443970            -0.11441275            -0.40505984            -0.52863388             0.20459407             1.00984499
     2.1025250              3.08624913             0.25549664            -0.29901068             2.13358472            -0.38198314             0.55019345            -1.47243471
      .85022300            -2.41840603             0.37225574            -0.31986054            -3.15879340             1.44198816            -0.14872038             0.20837011
      .33759700             1.57480283             0.33233149             0.20550900             3.04624588            -0.67366146            -0.89690085             1.29713750
      .12889200            -0.83583205             0.14008479             0.59359268            -2.09941359            -0.66496950             0.24707597            -1.71838884
      .04511200             0.29255222             0.02395784             0.28229027             0.87380728             0.82977107             0.64443405             0.97758318
O    D
     3.7500000              0.13609758            -0.39151953             0.95199748            -0.92670660
     1.3125000              0.51401475            -0.62262728            -0.67736624             1.53420070
      .45937500             0.47407125             0.72160073            -0.34608569            -1.61221613
      .16078100             0.08166905             0.31870103             0.81524547             1.07889990
O    F
     2.3500000              0.33460642            -0.83677707             1.04919327
      .94000000             0.56136672             0.10721970            -1.65994322
      .37600000             0.29572786             0.72955061             1.13721800
O    G
     1.175000               0.89524901            -0.82800067
     0.470000               0.16664235             1.20800920
'''
}


cas_list = [i for i in range(1,6)]
ncore = 1
ncas = 5

pyscf_mol = make_mol(geom, basis, symm=False, s2=1)
#myhf = run_scf(pyscf_mol)


#part2: 获得forte计算完SA-CASSCF之后的分子轨道系数
mo_coeff = np.load('../casscf/mo_coeff.npy') #scripts应该和计算的分子文件在同一目录：oh/casscf; oh/dsrg; oh/soc


#part3:
psi4_ao_labels = get_ao_order_psi4('../casscf/ao_labels.txt')
pyscf_ao_labels = get_ao_order_pyscf(pyscf_mol)
P = get_trans_matrix_pyscf_to_psi4(pyscf_ao_labels, psi4_ao_labels)
psi4_ao_rdm1 = get_ao_rdm1(ncore, ncas, mo_coeff, cas_list)
pyscf_ao_rdm1 = get_1rdm_ao_pyscf(P, psi4_ao_rdm1)
np.save('psi4_ao_rdm1.npy', psi4_ao_rdm1)
np.save('pyscf_ao_rdm1.npy', pyscf_ao_rdm1)

#part4:
h1_ao_soc = h1_soc_ao(pyscf_mol)
h2_ao_soc = h2_somf_soc_ao(pyscf_mol, pyscf_ao_rdm1, amfi=True)
f_pq_psi4 = f_soc_mo(h1_ao_soc, h2_ao_soc, pyscf_ao_labels, psi4_ao_labels, mo_coeff, cas_list)
np.save('f_pq_psi4.npy', f_pq_psi4)

##part5:
new_basis, energies_casscf = get_substates_energies()
ci_list = get_ci_list(mol, new_basis)
h_soc = h_soc_based_ci(ncas, ci_list, f_pq_psi4, new_basis)
np.save('h_soc.npy', h_soc)

h_soc = np.load('h_soc.npy')
#part6:sa-casscf + soc
h_spinfree = np.diag(energies_casscf)
eigval_t, eigvec_t = np.linalg.eigh(h_soc + h_spinfree)
print(eigval_t)
np.save('eigval_t_casscf_soc', eigval_t)


#part7:dsrg + soc
# substates的顺序已经与构建dsrg Hamiltonian的substates的顺序保持一致，所以可以直接用，不需要进行原本的basis的转化
h_dsrg = np.load('../dsrg-df/core0/hamiltonian.npy') #需修改
eigval_t_dsrg, eigvec_t_dsrg = np.linalg.eigh(h_soc + h_dsrg)
print(eigval_t_dsrg)
np.save('eigval_t_dsrg_soc', eigval_t_dsrg)


au2cm = 219474.63
e0 = np.average(eigval_t[0:2])#需修改
e1 = np.average(eigval_t[2:4])
print("ZFS 2P  3/2 - 1/2      = %10.4f cm-1" % ((e1 - e0) * au2cm))

au2cm = 219474.63
e0 = np.average(eigval_t_dsrg[0:2])#需修改
e1 = np.average(eigval_t_dsrg[2:4])
print("ZFS 2P  3/2 - 1/2      = %10.4f cm-1" % ((e1 - e0) * au2cm))



